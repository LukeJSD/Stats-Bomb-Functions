library(devtools)
install.packages("devtools")
library(devtools)
build_github_devtools()
library(devtools)
install.packages("devtools.zip", repos = NULL)
library(devtools)
library(devtools)
build_git_devtools
build_git_devtools()
devtools::install_github("statsbomb/StatsBombR")
install.packages("remotes")
remotes::install_version("SDMTools", "1.1-221")
install.packages("remotes")
remotes::install_version("SDMTools", "1.1-221")
rtools
library(rtools)
devtools::install_github("statsbomb/StatsBombR")
find_rtools(T)
library(devtools)
library(devtools)
find_rtools(T)
install.packages(installr)
updateR()
if(!require(installr)) {
install.packages("installr");
require(installr)
} #load / install+load installr
updateR()
updateR()
if(!require(installr)) {
+     install.packages("installr");
+     require(installr)
+ } #load / install+load installr
updateR()
library(devtools)
updateR()
library(installr)
updateR()
library(StatsBombR)
AllMatches <- FreeMatches(filter(FreeCompetitions(), competition_id==11 & season_id==22))
View(AllMatches)
colnames(AllMatches)
Matches <- filter(AllMatches, home_team.home_team_name=="Barcelona" | away_team.away_team_name=="Barcelona")
View(Matches)
EventData<-StatsBombFreeEvents(MatchesDF = AllMatches, Parallel = T)
EventData<-StatsBombFreeEvents(MatchesDF = AllMatches)
EventData<-StatsBombFreeEvents(MatchesDF = "AllMatches"All, Parallel = T)
EventData<-StatsBombFreeEvents(MatchesDF = "All", Parallel = T)
EventData
AllData <- free_allevents()
AllData
get.matchFree(Matches[1,])
get.matchFree(Matches[1,])m <-
m <- get.matchFree(Matches[1,])
View(m)
Match <- get.matchFree(Matches[28,])
View(Match)
View(Matches)
PassData <- subset(Match, Match$type.name=="Pass")
Data <- PassData[c("id","player.name","pass.length","pass.recipient.name","location.x","location.y","pass.end_location.x","pass.end_location.y")]
subsetFunc = c("id","player.name","pass.length","pass.recipient.name","location.x","location.y","pass.end_location.x","pass.end_location.y")
Data
Data = PassData[subsetFunc]
View(allclean(PassData))
View(allclean(Match))
View(Pass)
View(PassData)
subsetFunc = c("id","player.name","pass.length","pass.angle","pass.recipient.name","pass.end_location")
Data = PassData[subsetFunc]
View(Data)
subsetFunc = c("id","player.name","pass.length","pass.angle","pass.end_location","pass.recipient.name","team.name")
Data = PassData[subsetFunc]
View(Data)
# WWC19: 72, 30
events.wwc <- allclean(get.competitionEvents(72,30))
setwd("C:/users/luke/Personal_Projects/Soccer/stats_bomb/")
source("C:/users/luke/Personal_Projects/Soccer/stats_bomb/StatsBombFun.R")
# WWC19: 72, 30
events.wwc <- allclean(get.competitionEvents(72,30))
get.match_info <-  function(df) {
events <- df
events["unit.goal"] <- ifelse(!is.na(events$shot.outcome.id) & events$shot.outcome.id==97, 1, 0)
events["unit.shot"] <- ifelse(!is.na(events$type.id) & events$type.id==16, 1, 0)
events["unit.pass"] <- ifelse(events$type.id==30, 1, 0)
events["unit.pass.comp"] <- ifelse(events$type.id==30 & is.na(events$pass.outcome), 1, 0)
events$shot.statsbomb_xg[is.na(events$shot.statsbomb_xg)] = 0
matches <- merge(
events %>% group_by(match_id, team.id, possession) %>%
summarise(
TimeInPoss=max(TimeInPoss)/60
) %>% group_by(match_id, team.id) %>%
summarise(TimeInPoss=sum(TimeInPoss)),
events %>% group_by(match_id, team.id) %>%
summarise(
goals=sum(unit.goal),
xG=sum(shot.statsbomb_xg),
shots=sum(unit.shot),
pass.attempts=sum(unit.pass),
pass.completed=sum(unit.pass.comp)
),
by=c("match_id", "team.id")
)
matches <- merge(
matches,
events %>% select(team.name, team.id),
by="team.id"
)
return(matches)
}
View(get.match_info(events.wwc))
events <- events.wwc
events["unit.goal"] <- ifelse(!is.na(events$shot.outcome.id) & events$shot.outcome.id==97, 1, 0)
events["unit.shot"] <- ifelse(!is.na(events$type.id) & events$type.id==16, 1, 0)
events["unit.pass"] <- ifelse(events$type.id==30, 1, 0)
events["unit.pass.comp"] <- ifelse(events$type.id==30 & is.na(events$pass.outcome), 1, 0)
events["unit.pass.comp"] <- ifelse(is.na(events$pass.outcome) & events$type.id==30, 1, 0)
is.na(events$pass.outcome) & events$type.id==30
get.match_info <-  function(df) {
events <- df
events["unit.goal"] <- ifelse(!is.na(events$shot.outcome.id) & events$shot.outcome.id==97, 1, 0)
events["unit.shot"] <- ifelse(!is.na(events$type.id) & events$type.id==16, 1, 0)
events["unit.pass"] <- ifelse(events$type.id==30, 1, 0)
events["unit.pass.comp"] <- ifelse(is.na(events$pass.outcome.id) & events$type.id==30, 1, 0)
events$shot.statsbomb_xg[is.na(events$shot.statsbomb_xg)] = 0
matches <- merge(
events %>% group_by(match_id, team.id, possession) %>%
summarise(
TimeInPoss=max(TimeInPoss)/60
) %>% group_by(match_id, team.id) %>%
summarise(TimeInPoss=sum(TimeInPoss)),
events %>% group_by(match_id, team.id) %>%
summarise(
goals=sum(unit.goal),
xG=sum(shot.statsbomb_xg),
shots=sum(unit.shot),
pass.attempts=sum(unit.pass),
pass.completed=sum(unit.pass.comp)
),
by=c("match_id", "team.id")
)
matches <- merge(
matches,
events %>% select(team.name, team.id),
by="team.id"
)
return(matches)
}
View(get.match_info(events.wwc))
events["unit.goal"] <- ifelse(!is.na(events$shot.outcome.id) & events$shot.outcome.id==97, 1, 0)
events["unit.shot"] <- ifelse(!is.na(events$type.id) & events$type.id==16, 1, 0)
events["unit.pass"] <- ifelse(events$type.id==30, 1, 0)
events["unit.pass.comp"] <- ifelse(is.na(events$pass.outcome.id) & events$type.id==30, 1, 0)
events$shot.statsbomb_xg[is.na(events$shot.statsbomb_xg)] = 0
matches <- merge(
events %>% group_by(match_id, team.id, possession) %>%
summarise(
TimeInPoss=max(TimeInPoss)/60
) %>% group_by(match_id, team.id) %>%
summarise(TimeInPoss=sum(TimeInPoss)),
events %>% group_by(match_id, team.id) %>%
summarise(
goals=sum(unit.goal),
xG=sum(shot.statsbomb_xg),
shots=sum(unit.shot),
pass.attempts=sum(unit.pass),
pass.completed=sum(unit.pass.comp)
),
by=c("match_id", "team.id")
)
get.match_info <-  function(df) {
events <- df
events["unit.goal"] <- ifelse(!is.na(events$shot.outcome.id) & events$shot.outcome.id==97, 1, 0)
events["unit.shot"] <- ifelse(!is.na(events$type.id) & events$type.id==16, 1, 0)
events["unit.pass"] <- ifelse(events$type.id==30, 1, 0)
events["unit.pass.comp"] <- ifelse(is.na(events$pass.outcome.id) & events$type.id==30, 1, 0)
events$shot.statsbomb_xg[is.na(events$shot.statsbomb_xg)] = 0
matches <- merge(
events %>% group_by(match_id, team.id, possession) %>%
summarise(
TimeInPoss=max(TimeInPoss)/60
) %>% group_by(match_id, team.id) %>%
summarise(TimeInPoss=sum(TimeInPoss)),
events %>% group_by(match_id, team.id) %>%
summarise(
goals=sum(unit.goal),
xG=sum(shot.statsbomb_xg),
shots=sum(unit.shot),
pass.attempts=sum(unit.pass),
pass.completed=sum(unit.pass.comp)
),
by=c("match_id", "team.id")
)
matches <- merge(
matches,
events %>% group_by(team.name, team.id) %>% summarise(),
by="team.id"
)
return(matches)
}
View(get.match_info(events.wwc))
get.match_info <-  function(df) {
events <- df
events["unit.goal"] <- ifelse(!is.na(events$shot.outcome.id) & events$shot.outcome.id==97, 1, 0)
events["unit.shot"] <- ifelse(!is.na(events$type.id) & events$type.id==16, 1, 0)
events["unit.pass"] <- ifelse(events$type.id==30, 1, 0)
events["unit.pass.comp"] <- ifelse(is.na(events$pass.outcome.id) & events$type.id==30, 1, 0)
events$shot.statsbomb_xg[is.na(events$shot.statsbomb_xg)] = 0
matches <- merge(
events %>% group_by(match_id, team.id, possession) %>%
summarise(
TimeInPoss=max(TimeInPoss)
) %>% group_by(match_id, team.id) %>%
summarise(TimeInPoss=sum(TimeInPoss)),
events %>% group_by(match_id, team.id) %>%
summarise(
goals=sum(unit.goal),
xG=sum(shot.statsbomb_xg),
shots=sum(unit.shot),
pass.attempts=sum(unit.pass),
pass.completed=sum(unit.pass.comp)
),
by=c("match_id", "team.id")
)
matches <- merge(
matches,
events %>% group_by(team.name, team.id) %>% summarise(),
by="team.id"
)
return(matches)
}
View(get.match_info(events.wwc))
match.info <- get.match_info(events.wwc)
View(match.info)
View(match.info$TimeInPoss/60)
get.match_info <-  function(df) {
events <- df
events["unit.goal"] <- ifelse(!is.na(events$shot.outcome.id) & events$shot.outcome.id==97, 1, 0)
events["unit.shot"] <- ifelse(!is.na(events$type.id) & events$type.id==16, 1, 0)
events["unit.pass"] <- ifelse(events$type.id==30, 1, 0)
events["unit.pass.comp"] <- ifelse(is.na(events$pass.outcome.id) & events$type.id==30, 1, 0)
events$shot.statsbomb_xg[is.na(events$shot.statsbomb_xg)] = 0
matches <- merge(
events %>% group_by(match_id, team.id, possession) %>%
summarise(
TimeInPoss=max(TimeInPoss)
) %>% group_by(match_id, team.id) %>%
summarise(TimeInPoss=sum(TimeInPoss)),
events %>% group_by(match_id, team.id) %>%
summarise(
goals=sum(unit.goal),
xG=sum(shot.statsbomb_xg),
shots=sum(unit.shot),
pass.attempts=sum(unit.pass),
pass.completed=sum(unit.pass.comp)
),
by=c("match_id", "team.id")
)
matches <- merge(
matches,
events %>% group_by(team.name, team.id) %>% summarise(),
by="team.id"
)
matches$TimeInPoss <- matches$TimeInPoss/60
return(matches)
}
match.info <- get.match_info(events.wwc)
tm = 861
md = 22921
match.info[match.info$match_id==md & team.id==tm,"TimeInPoss"] / (match.info[match.info$match_id==md & team.id==tm,"TimeInPoss"] + match.info[match.info$match_id==md & team.id!=tm,"TimeInPoss"])
match.info[match.info$match_id==md & match.info$team.id==tm,"TimeInPoss"] / (match.info[match.info$match_id==md & match.info$team.id==tm,"TimeInPoss"] + match.info[match.info$match_id==md & match.info$team.id!=tm,"TimeInPoss"])
get.match_info <-  function(df) {
events <- df
events["unit.goal"] <- ifelse(!is.na(events$shot.outcome.id) & events$shot.outcome.id==97, 1, 0)
events["unit.shot"] <- ifelse(!is.na(events$type.id) & events$type.id==16, 1, 0)
events["unit.pass"] <- ifelse(events$type.id==30, 1, 0)
events["unit.pass.comp"] <- ifelse(is.na(events$pass.outcome.id) & events$type.id==30, 1, 0)
events$shot.statsbomb_xg[is.na(events$shot.statsbomb_xg)] = 0
matches <- merge(
events %>% group_by(match_id, team.id, possession) %>%
summarise(
TimeInPoss=max(TimeInPoss)
) %>% group_by(match_id, team.id) %>%
summarise(TimeInPoss=sum(TimeInPoss)),
events %>% group_by(match_id, team.id) %>%
summarise(
goals=sum(unit.goal),
xG=sum(shot.statsbomb_xg),
shots=sum(unit.shot),
pass.attempts=sum(unit.pass),
pass.completed=sum(unit.pass.comp)
),
by=c("match_id", "team.id")
)
matches <- merge(
matches,
events %>% group_by(team.name, team.id) %>% summarise(),
by="team.id"
)
poss.per <- c()
matches$TimeInPoss <- matches$TimeInPoss/60
for (i in nrow(matches)) {
md <- matches$match_id[i]
tm <- matches$team.id[i]
per <- match.info[match.info$match_id==md & match.info$team.id==tm,"TimeInPoss"] /
(match.info[match.info$match_id==md & match.info$team.id==tm,"TimeInPoss"] +
match.info[match.info$match_id==md & match.info$team.id!=tm,"TimeInPoss"])
poss.per <- c(poss.per, per)
}
matches["possesion.percentage"] <- poss.per
return(matches)
}
match.info <- get.match_info(events.wwc)
source("C:/users/luke/Personal_Projects/Soccer/stats_bomb/StatsBombFun.R")
match.info <- get.match_info(events.wwc)
source("C:/users/luke/Personal_Projects/Soccer/stats_bomb/StatsBombFun.R")
match.info <- get.match_info(events.wwc)
source("C:/users/luke/Personal_Projects/Soccer/stats_bomb/StatsBombFun.R")
match.info <- get.match_info(events.wwc)
source("C:/users/luke/Personal_Projects/Soccer/stats_bomb/StatsBombFun.R")
match.info <- get.match_info(events.wwc)
match.info %>% filter(team.id==1214)
View(match.info %>% filter(team.id==1214))
View(match.info[match.info$match_id %in% unique(match.info[match.info$team.id==1214],"match_id")])
match.info[match.info$match_id %in% unique(match.info[match.info$team.id==1214],"match_id")]
View(match.info[match.info$match_id %in% unique(match.info[match.info$team.id==1214],"match_id"),])
View(match.info[match.info$match_id %in% unique(match.info[match.info$team.id==1214],"match_id"),])
match.info$match_id %in% unique(match.info[match.info$team.id==1214],"match_id")
View(match.info[match.info$match_id %in% unique(match.info[match.info$team.id==1214,"match_id"]),])
View(match.info[match.info$match_id %in% unique(match.info[match.info$team.id==863,"match_id"]),])
# quarters.wwc = c(
#   "United States Women's","England Women's","France Women's","Germany Women's",
#   "Netherlands Women's","Sweden Women's","Italy Women's","Norway Women's"
# )
# WEuros: 53, 106
events.weuro <- allclean(get.competitionEvents(53,106))
match.info.euro <- get.match_info(events.weuro)
View(match.info.euro[match.info.euro$match_id %in% unique(match.info.euro[match.info.euro$team.id==863,"match_id"]),])
setwd("C:/users/luke/Personal_Projects/Soccer/stats_bomb/")
source("C:/users/luke/Personal_Projects/Soccer/stats_bomb/StatsBombFun.R")
View(get.attack.id)
View(get.competitionEvents)
setwd("C:/users/luke/Personal_Projects/Soccer/stats_bomb/")
source("C:/users/luke/Personal_Projects/Soccer/stats_bomb/StatsBombFun.R")
events.wc.22 <- allclean(get.competitionEvents(43,106))
events.wc.18 <- allclean(get.competitionEvents(43,3))
lapply(events.wc.22[,c("location.x","location.y")], dist_to_gl)
lapply(events.wc.22[c("location.x","location.y")], dist_to_gl)
mapply(dist_to_gl, events.wc.22$location.x, events.wc.22$location.y)
mapply(dist_to_gl, events.wc.22$location.x, events.wc.22$location.y)
compile.individualStats <- function(df, carry.events=NULL, pPass.events=NULL) {
if (is.null(carry.events)) {carry.events <- get.progressive(df,"Carry")}
if (is.null(pPass.events)) {pPass.events <- get.progressive(df,"Pass")}
events.ind <- merge(
carry.events %>% group_by(player.id,team.id,player.name,team.name) %>%
summarise(pC=count.createdEvent.col(carry.progressive),pC.distance=sum(carry.progressive.distance)),
pPass.events %>% group_by(player.id,team.id,player.name,team.name) %>%
summarise(pP=count.createdEvent.col(pass.progressive),pP.distance=sum(pass.progressive.distance)),
by=c("player.id","team.id","player.name","team.name")
)
minutes.events <- get.minutesplayed.total(df)
events.ind <- merge(
minutes.events,
events.ind,
by=c("player.id","player.name")
)
events.ind <- merge(
events.ind,
get.player.primaryPosition(df),
by="player.id"
)
return(events.ind)
}
